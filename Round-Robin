#include <stdio.h>

int n, i, j, time_quantum, total = 0;
int burst_time[20], remaining_time[20], waiting_time[20], turnaround_time[20];
int priority[20], process[20];

// Round Robin Scheduling
void RoundRobin() {
    int t = 0, count, y = n;
    float avg_wait = 0, avg_turnaround = 0;

    for (i = 0; i < n; i++)
        remaining_time[i] = burst_time[i];

    printf("\nEnter Time Quantum: ");
    scanf("%d", &time_quantum);

    printf("\nProcess\tBurst Time\tWaiting Time\tTurnaround Time\n");

    while (y != 0) {
        count = 0;

        for (i = 0; i < n; i++) {
            if (remaining_time[i] > 0) {
                if (remaining_time[i] <= time_quantum) {
                    t += remaining_time[i];
                    turnaround_time[i] = t;
                    waiting_time[i] = turnaround_time[i] - burst_time[i];
                    remaining_time[i] = 0;
                    y--;
                } else {
                    remaining_time[i] -= time_quantum;
                    t += time_quantum;
                }
            }
        }
    }

    for (i = 0; i < n; i++) {
        avg_wait += waiting_time[i];
        avg_turnaround += turnaround_time[i];
        printf("P[%d]\t%d\t\t%d\t\t%d\n", i + 1, burst_time[i], waiting_time[i], turnaround_time[i]);
    }

    avg_wait /= n;
    avg_turnaround /= n;

    printf("\nAverage Waiting Time: %.2f", avg_wait);
    printf("\nAverage Turnaround Time: %.2f\n", avg_turnaround);
}
